# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN = 
PROJECT = QuadroSchrauber
OBJECTS = ./MadgwickAHRS.o ./MODSERIAL/ChangeLog.o ./rtos/RTX_Conf_CM.o ./MS5611.o ./mpu-60x0.o ./control.o ./HMC5883.o ./sr04.o ./MaxSonar-EZ1.o ./blinkm.o ./freeimu430.o ./main.o ./TinyGPS.o ./motor.o ./quadroschrauber.o ./filter.o ./pid.o ./GTMath/Vector2.o ./GTMath/Vector3.o ./GTMath/Quaternion.o ./GTMath/Matrix3x3.o ./Watchdog/Watchdog.o ./MODSERIAL/FLUSH.o ./MODSERIAL/example_dma.o ./MODSERIAL/example2.o ./MODSERIAL/MODSERIAL.o ./MODSERIAL/example3a.o ./MODSERIAL/GETC.o ./MODSERIAL/ISR_TX.o ./MODSERIAL/example1.o ./MODSERIAL/INIT.o ./MODSERIAL/MODSERIAL_IRQ_INFO.o ./MODSERIAL/PUTC.o ./MODSERIAL/RESIZE.o ./MODSERIAL/ISR_RX.o ./MODSERIAL/example3b.o 
SYS_OBJECTS = ./mbed/LPC1768/GCC_ARM/cmsis_nvic.o ./mbed/LPC1768/GCC_ARM/system_LPC17xx.o ./mbed/LPC1768/GCC_ARM/core_cm3.o ./mbed/LPC1768/GCC_ARM/startup_LPC17xx.o 
INCLUDE_PATHS = -I. -I./GTMath -I./mavlink -I./mavlink/common -I./mbed -I./mbed/LPC1768 -I./mbed/LPC1768/GCC_ARM -I./Watchdog -I./MODSERIAL -I./rtos 
LIBRARY_PATHS = -L./mbed/LPC1768/GCC_ARM 
LIBRARIES = -lmbed 
LINKER_SCRIPT = ./mbed/LPC1768/GCC_ARM/LPC1768.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy

CPU = -mcpu=cortex-m3 -mthumb
CC_FLAGS = $(CPU) -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections 
CC_SYMBOLS = -DTARGET_LPC1768 -DTOOLCHAIN_GCC_ARM -DNDEBUG -D__CORTEX_M3

LD_FLAGS = -mcpu=cortex-m3 -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

all: $(PROJECT).bin

clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(OBJECTS)

.s.o:
	$(AS) $(CPU) -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)

$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@